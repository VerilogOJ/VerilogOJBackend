- id: 8
  name: "十进制计数器"
  description: |-
    构建一个计数从0到9（包括0和9）的十进制计数器，周期为 10。
    同步的复位信号将计数器复位为0。（当reset信号为active的时候，寄存器在下一个时钟沿到来之后被复位。）
  description_input: |-
    - `clk`: 1bit
    - `reset`: 1bit
  description_output: |-
    - `q`: 4bit

  top_module: "decade_counter"
  signals: ["clk","reset","q"]

  code_template: |-
    module decade_counter(
        input clk,
        input reset,
        output [3:0] q
    );
        // 在这里输入你的代码 请不要修改模块和信号名称
    endmodule
  code_reference: |-
    module decade_counter(
        input clk,
        input reset,
        output [3:0] q
    );
        always@(posedge clk) begin
            if(reset)
              q <= 4'b0;
            else begin
              if(q < 9)
                q <= q + 1'b1;
              else
                q <= 4'b0;
            end         
        end
    endmodule
  code_testbenches:
    - |-
      module testbench();
          reg clk;
          reg reset;
          wire [3:0] q;
          decade_counter DCT(clk, reset, q); 
          
          initial begin
              $dumpfile(`DUMP_FILE_NAME);
              $dumpvars;
          end

          initial begin
              clk = 0; reset = 1;
              #3 reset = ~reset;
              #7 reset = ~reset;
              #3 reset = ~reset;
          end

          always begin
              #1 clk = ~clk;
          end

      endmodule            