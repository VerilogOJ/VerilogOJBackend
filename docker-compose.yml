version: "3.7"

services:
  backend-nginx:
    build:
      context: ./backend
      dockerfile: Dockerfile.nginx
    ports:
      # 前端发请求到宿主机的40000端口 宿主机的40000端口接受请求 由Docker转发到nginx容器的80端口 进一步转发到http://backend:8000/oj/api/
      # QUESTION 这个backend是个啥？
      - "40000:80"

  # API地址为 0.0.0.0:8000 在Dockerfile.django的`gunicorn -b`中设置
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.django
      args:
        USE_PIP_MIRROR: "yes"
        USE_APK_MIRROR: "yes"
        USE_MYSQL: "yes" # 生产环境使用数据库而不是SQLite
    environment:
      VERILOG_OJ_HOST_STATIC: "yes"
      #VERILOG_OJ_PROD_DEBUG: "yes"
      VERILOG_OJ_JUDGER_SECRET: ${judger_secret}
      VERILOG_OJ_SECRET_KEY: ${secret_key}
      VERILOG_OJ_USE_MYSQL: "yes"
      VERILOG_OJ_MYSQL_DATABASE: django_db
      VERILOG_OJ_MYSQL_HOST: db
      VERILOG_OJ_MYSQL_PORT: 3306
      VERILOG_OJ_MYSQL_USER: django
      VERILOG_OJ_MYSQL_PASSWORD: ${mysql_password}
      VERILOG_OJ_PUBLIC_HOST: ${public_host}
      #VERILOG_OJ_RABBITMQ_PASSWORD: ${rabbitmq_password}
      #DOCKER_JUDGER_HOST_PATH: ${docker_judger_host_path}
      #DOCKER_HOST_DIR: ${docker_host_dir}
    volumes:
      - files-volume:/app/storage
    depends_on:
      - "db"

  # Fix bug on Django entering Chinese characters
  # - The database connection settings only works with conn params
  # - And not on anything else
  # - Useful command: `show variables like 'character%';` in mysql
  # ref: https://stackoverflow.com/questions/45729326/how-to-change-the-default-character-set-of-mysql-using-docker-compose
  db:
    # 5.7 raises InnoDB limit, so VARCHAR(255) is possible
    # - So no need to alter Django stuff, probably
    # - http://mysql.rjweb.org/doc.php/limits#767_limit_in_innodb_indexes
    image: "mysql:5.7"
    # Notice the env below will only useful when no db file is given
    environment:
      MYSQL_ROOT_PASSWORD: ${mysql_root_password}
      MYSQL_DATABASE: django_db
      MYSQL_USER: django
      MYSQL_PASSWORD: ${mysql_password}
    volumes:
      - db-volume:/var/lib/mysql
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']


volumes:
  db-volume:
    driver: local
  files-volume:
    driver: local
